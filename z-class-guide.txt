[동적인 UI 만드는 step]
1. html과 css사용하여 미리 디자인 완성
2. UI의 현재 상태를 state로 저장
3. state에 따라 UI가 어떻게 보일지 작성



[map 문법]
모든 js배열에는 .map()함수를 사용할 수 있다. 기본함수와 같은 것이다.
map함수 안에는 callback함수를 파라미터로 넣어줄 수 있다.

1. map함수는 배열 내부의 자료 개수만큼 콜백 함수를 반복실행 해준다

e.g. [1, 2, 3].map(function(){
    console.log(1)
    // 1
    // 1
    // 1
})

2. 콜백 함수에 파라미터를 설정하면, array의 요소가 차례로 대입된다.

e.g. [1, 2, 3].map(function(item){
    console.log(item)
    // 1
    // 2
    // 3
})

3. 콜백 함수에 리턴을 적으면 array로 담아준다.
e.g. [1, 2, 3].map(function(item){
    return "#";
    // ['#', '#', '#']
})


부모 -> 자식 state 전송하는 법 (props 사용하는 법. 부모에서 자식만 가능)
1. <자식컴포넌트 작명={state명}>
2. props 파라미터 등록 후 props.작명 이용


자식 컴포넌트에 고유의 state를 만들어 써도 된다.
그러나 여러 컴포넌트에서 필요하다면 가장 최상위 컴포넌트에
만드는 것이 좋다.